<?php

use Zend\Mail\Transport\Smtp;

return [
    'import-api' => [
        'etablissements' => [
            // code établissement => [config]
            'UNILIM' => [
                'url'      => 'https://sygal-import-ws:443', // https://{nom du service docker-compose}:443
                'proxy'    => false, // indispensable pour docker-compose run/exec
                'verify'   => false, // si true : cURL error 60: SSL certificate problem: self signed certificate
                'user'     => 'sygal-app',
                'password' => 'xxxxxxxxxxx',
            ],
        ],
    ],
    'doctrine' => [
        'connection' => [
            'orm_default' => [
                'params' => [
                    'host'     => 'host.domain.fr',
                    'dbname'   => 'DBNAME',
                    'port'     => '1523',
                    'user'     => $user = 'sygal_test',
                    'password' => 'xxxxxxxxxxx',
                    'charset'  => 'AL32UTF8',
                    'CURRENT_SCHEMA' => $user,
                ],
            ],
        ],
    ],
    'fichier' => [
        'root_dir_path' => '/var/www/sygal/upload',
    ],
    'navigation'      => [
        'information' => [
            'accueil' => [
                'pages' => [
                    'doctorat' => [
                        'label' => 'Le doctorat en Normandie',
                        'title' => "Informations sur le doctorat et sa gestion en Normandie"
                    ],
                    'ecoles-doctorales' => [
                        'label' => 'Les Ecoles Doctorales normandes',
                        'title' => "Informations sur les Ecoles Doctorales et le Collège des Ecoles doctorales"
                    ],
                    'guide-these' => [
                        'label' => 'Guide de la thèse',
                        'title' => "Informations sur le déroulement de la thèse et formulaires administratifs à l’intention du doctorant et de ses encadrants"
                    ],
                ],
            ],
        ],
    ],
    'cli_config' => [
        'scheme' => 'http',
        'domain' => 'localhost:8000',
    ],
    'public_files' => [
        'cache_enabled' => false,
    ],
    'unicaen-app' => [
        'mail' => [
            'transport' => Smtp::class,
            'transport_options' => [
                'host' => 'smtp.domain.fr',
                'port' => 25,
            ],
            'from' => 'ne_pas_repondre@domain.fr',
            'redirect_to' => [/*'mail@domain.fr'*/],
            'do_not_send' => false,
        ],
        'ldap' => [
            'connection' => [
                'default' => [
                    'params' => $ldapParams = [
                    ]
                ]
            ]
        ],
        'maintenance' => [
            // activation (true: activé, false: désactivé)
            'enable' => false,
            // liste blanche des adresses IP clientes non concernées
            'white_list' => [
                //['127.0.0.1'],   // localhost
            ],
        ],
    ],
    'unicaen-ldap' => $ldapParams,
    'unicaen-auth' => [
        'ldap' => [
            'enabled' => false,
        ],
        'shibboleth' => [
            'enable' => true,
            'simulate' => [
                'eppn'        => 'id@domain.fr',
                'supannEmpId' => 'xxxxxx',
            ],
            'aliases' => [
                'eppn'                   => 'HTTP_EPPN',
                'mail'                   => 'HTTP_MAIL',
                'eduPersonPrincipalName' => 'HTTP_EPPN',
                'supannEtuId'            => 'HTTP_SUPANNETUID',
                'supannEmpId'            => 'HTTP_SUPANNEMPID',
                'supannCivilite'         => 'HTTP_SUPANNCIVILITE',
                'displayName'            => 'HTTP_DISPLAYNAME',
                'sn'                     => 'HTTP_SN',
                'givenName'              => 'HTTP_GIVENNAME',
            ],
        ],
        'cas' => [
//            'connection' => [
//                'default' => [
//                    'params' => [
//                        'hostname' => 'host.domain.fr',
//                        'port' => 443,
//                        'version' => "2.0",
//                        'uri' => "",
//                        'debug' => false,
//                    ],
//                ],
//            ],
        ],
        'usurpation_allowed_usernames' => [
        ],
    ],
    'zenddevelopertools' => [
        /**
         * General Profiler settings
         */
        'profiler' => [
            /**
             * Enables or disables the profiler.
             *
             * Expects: bool
             * Default: true
             */
            'enabled' => true,

            /**
             * Enables or disables the strict mode. If the strict mode is enabled, any error will throw an exception,
             * otherwise all errors will be added to the report (and shown in the toolbar).
             *
             * Expects: bool
             * Default: true
             */
            'strict' => true,

            /**
             * If enabled, the profiler tries to flush the content before the it starts collecting data. This option
             * will be ignored if the Toolbar is enabled.
             *
             * Note: The flush listener listens to the MvcEvent::EVENT_FINISH event with a priority of -9400. You have
             * to disable this function if you wish to modify the output with a lower priority.
             *
             * Expects: bool
             * Default: false
             */
            'flush_early' => false,

            /**
             * The cache directory is used in the version check and for every storage type that writes to the disk.
             * Note: The default value assumes that the current working directory is the application root.
             *
             * Expects: string
             * Default: 'data/cache'
             */
            'cache_dir' => 'data/cache',

            /**
             * If a matches is defined, the profiler will be disabled if the request does not match the pattern.
             *
             * Example: 'matcher' => array('ip' => '127.0.0.1')
             * OR
             * 'matcher' => array('url' => array('path' => '/admin')
             * Note: The matcher is not implemented yet!
             */
            'matcher' => [],

            /**
             * Contains a list with all collector the profiler should run. Zend Developer Tools ships with
             * 'db' (Zend\Db), 'time', 'event', 'memory', 'exception', 'request' and 'mail' (Zend\Mail). If you wish to
             * disable a default collector, simply set the value to null or false.
             *
             * Example: 'collectors' => array('db' => null)
             * Expects: array
             */
            'collectors' => []
        ],
        'events' => [
            /**
             * Set to true to enable event-level logging for collectors that will support it. This enables a wildcard
             * listener onto the shared event manager that will allow profiling of user-defined events as well as the
             * built-in ZF events.
             *
             * Expects: bool
             * Default: false
             */
            'enabled' => true,

            /**
             * Contains a list with all event-level collectors that should run. Zend Developer Tools ships with 'time'
             * and 'memory'. If you wish to disable a default collector, simply set the value to null or false.
             *
             * Example: 'collectors' => array('memory' => null)
             * Expects: array
             */
            'collectors' => [],

            /**
             * Contains event identifiers used with the event listener. Zend Developer Tools defaults to listen to all
             * events. If you wish to disable the default all-inclusive identifier, simply set the value to null or
             * false.
             *
             * Example: 'identifiers' => array('all' => null, 'dispatchable' => 'Zend\Stdlib\DispatchableInterface')
             * Expects: array
             */
            'identifiers' => []
        ],
        /**
         * General Toolbar settings
         */
        'toolbar' => [
            /**
             * Enables or disables the Toolbar.
             *
             * Expects: bool
             * Default: false
             */
            'enabled' => true,

            /**
             * If enabled, every empty collector will be hidden.
             *
             * Expects: bool
             * Default: false
             */
            'auto_hide' => false,

            /**
             * The Toolbar position.
             *
             * Expects: string ('bottom' or 'top')
             * Default: bottom
             */
            'position' => 'bottom',

            /**
             * If enabled, the Toolbar will check if your current Zend Framework version is up-to-date.
             * Note: The check will only occur once every hour.
             *
             * Expects: bool
             * Default: false
             */
            'version_check' => false,

            /**
             * Contains a list with all collector toolbar templates. The name  of the array key must be same as the name
             * of the collector.
             *
             * Example: 'profiler' => array(
             *  'collectors' => array(
             *      // My_Collector_Example::getName() -> mycollector
             *      'MyCollector' => 'My_Collector_Example',
             *  )
             * ),
             * 'toolbar' => array(
             *  'entries' => array(
             *      'mycollector' => 'example/toolbar/my-collector',
             *  )
             * ),
             * Expects: array
             */
            'entries' => []
        ]
    ]
];
