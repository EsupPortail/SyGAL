<?php
    use Application\Entity\Db\Role;
    use Application\Entity\Db\Privilege;
    use UnicaenAuth\Provider\Privilege\Privileges;


    $canVisualiser = $this->isAllowed(Privileges::getResourceId(Privileges::DROIT_PRIVILEGE_VISUALISATION));
    $canModifier = $this->isAllowed(Privileges::getResourceId(Privileges::DROIT_PRIVILEGE_EDITION));

//    var_dump($canVisualiser);
//    var_dump($canModifier);

/**
 * //Provenant du controleur
 * @var Role[] $roles
 * @var Privilege[] $privileges
 *
 * //Utilisée couramment
 * @var Role $role
 * @var Privilege $privilege
 */
?>



<?php $this->headTitle($this->translate("Rôles/Privilèges")) ?>
<h1 class="page-header first"><?php echo $this->translate("Rôles/Privilèges") ?>

</h1>

    <div class="pull-left">
        <?php echo $this->partial('partial/form-filtrage') ?>
    </div>

    <div class="pull-right">
        Structure
        <select>
            <option value = "AAA"> <span class="ur"> Ma petite UR</span></option>
            <option value = "BBB"> <span class="ed"> Ma petite ED</span></option>
            <option value = "EEE"> <span class="etab"> Mon Univ</span></option>
        </select>
    </div>

<?php

echo "<p>";
echo "<table id='mytable' class='mytable table-bordered'>";
echo "<thead>";
echo "<tr class='ttt'><th></th>";

foreach($roles as $role) {
    echo generateTableHeaderRole($role, $etablissements);
}
echo "</tr>";
echo "</thead>";
echo "<tbody>";

$previous_categorie = null;
foreach($privileges as $privilege) {
    if ($previous_categorie !== $privilege->getCategorie()) {
        echo "<tr class='ttt'><th colspan='1000' class='categorie'>".$privilege->getCategorie()->getLibelle()."</th></tr>";
        $previous_categorie = $privilege->getCategorie();
    }
    echo "<tr class='ttt'>";
    echo "<th class='privilege'> {$privilege->getLibelle()} </th>";
    foreach($roles as $role) {

        $id = "{$privilege->getId()}_{$role->getId()}";
        $code = ($role->getStructure() !== null) ? $role->getStructure()->getSigle() : " ";
        if ($code === null) $code = getCode($role, $etablissements);
        $title = "{$role->getLibelle()} - {$code} \n{$privilege->getLibelle()}";
        echo "<td class='droit' id='$id' title='{$title}'>";

        if( array_search($role, $privilege->getRole()->toArray()) !== false) {
            echo "<span class='glyphicon glyphicon-ok text-success'></span>";
        } else {
            echo "<span class='glyphicon glyphicon-remove text-danger'></span>";
        }

        echo "</td>";

    }
    echo "</tr>";
}
echo "</tbody>";
echo "</table>";
echo "</p>";
?>

<script>
    $(document).ready(function() {
        $("td").click(function() {

            var canModifier =  Boolean(<?php echo $canModifier; ?>);
            if (!canModifier) {
                alert("Vous n'êtes pas autorisé à modifier les privilèges associés à un rôle.");
                return;
            }

            var id = $(this).attr("id");
            var splits = id.split("_");
            var role = splits[1];
            var privilege = splits[0];
            var url = "modifier-privilege/" + role + "/" + privilege;

            $.ajax({
                url : url,
                beforeSend:
                    function () {
                        document.getElementById(id).innerHTML = "<img style='height:40px;' src='css/loading.gif'/>";
                    },
                success:
                    function(retour){
                        var texte = "";
                        if (retour == 1) texte = "<span class='glyphicon glyphicon-ok text-success'></span>";
                        else var texte = "<span class='glyphicon glyphicon-remove text-danger'></span>";
                        document.getElementById(id).innerHTML = texte;
                    }
            });


        });
    });
</script>


<?php

    function generateOK() {
        return "OK";
    }

    function generateKO() {
        return "KO";
    }


    function getCode(Role $role, $etablissements) {

        //TODO changer se morceau de code maladroit

        /** @var \Application\Entity\Db\Etablissement $etablissement */
        foreach($etablissements as $etablissement) {
            if ($etablissement->getSigle() == $role->getStructure()->getSigle()) {
                return $etablissement->getCode();
            }
        }
        return "missing";
    }


    /**
     * @param Role $role
     * @return string
     */
    function generateTableHeaderRole($role, $etablissements = null) {

        $premiere = $role->getLibelle();
        $seconde  = "";
        $de = "";
        switch(true) {
            case $role->isTheseDependant() :
                $seconde = getCode($role, $etablissements);
                $de = "these";
                break;
            case $role->isEcoleDoctoraleDependant() :
                $seconde = $role->getStructure()->getSigle();
                $de = "ed";
                break;
            case $role->isEtablissementDependant() :
                $seconde = getCode($role, $etablissements);
                $de = "etab";
                break;
            case $role->isUniteRechercheDependant() :
                $seconde = $role->getStructure()->getSigle();
                $de = "ur";
                break;
        }


        $texte  = "<th class='role'>";
        $texte .= $premiere;
        $texte .= "<br/>";
        $texte .= "<span class='depend ".$de."'>";
        $texte .= $seconde;
        $texte .= "</span>";
        $texte .= "</th>";
        return $texte;
    }
?>


<style>

    table.mytable {
        background-color: white;
    }

    th.categorie {
        font-style: italic;
        font-size: 12pt;
        margin-left: 15px;
        background-color: lightgoldenrodyellow;
    }

    th.privilege {
        height:50px;
    }

    th.role {
        min-width:50px;
        writing-mode: vertical-lr;
        text-align: left;
        vertical-align: top;
    }
    .depend
    {
        text-orientation: upright;
    }

    .ed
    {
        color: #5B2268;
        text-orientation: upright;
    }

    .ur
    {
        color: #0a3783;
        text-orientation: upright;
    }

    .etab
    {
        color: #870a0a;
        text-orientation: upright;
    }

    .these
    {
        color: #004602;
        text-orientation: upright;
    }

    td.droit {
        vertical-align: center;
        text-align: center;
    }

    td.droit :hover {
        cursor:pointer;
    }
</style>