########################################################################################################################
#                           Image pour les tests unitaires/fonctionnels
#                            NE partant PAS de l'image Unicaen de base.
########################################################################################################################

FROM adrianharabula/php7-with-oci8

LABEL maintainer="Bertrand GAUTHIER <bertrand.gauthier at unicaen.fr>"

# Mise à niveau de la distrib.
RUN apt-get update && \
    apt-get install -y \
        git \
        libldap2-dev \
        libxml2-dev \
        libssl-dev \
        libcurl4-openssl-dev \
        libicu-dev \
        make \
        netcat-openbsd \
        phpunit \
        subversion \
        vim \
        wget && \
    rm -rf /var/lib/apt/lists/*

# Installation d'extensions PHP
RUN docker-php-ext-install -j$(nproc) gd soap curl gd intl
RUN docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu && docker-php-ext-install ldap

# Installation de Composer dans /usr/local/bin.
RUN cd $HOME && \
    curl -sS https://getcomposer.org/installer | php && \
    chmod +x composer.phar && \
    mv composer.phar /usr/local/bin/composer

# Config PHP.
ADD docker/php.conf /usr/local/etc/php/conf.d/webapp.ini

# Activation de l'extension PHP OCI8 en mode CLI (non fait par "thomasbisignani/docker-apache-php-oracle").
#RUN echo "extension=oci8.so" > /etc/php/7.0/cli/conf.d/30-oci8.ini

# Spécification du répertoire courant dans l'image.
WORKDIR /webapp

# Installation des dépendances Composer *en permettant la mise en cache Docker*.
# L'astuce consiste à faire l'installation avant la copie des sources de l'appli car cette dernière invalide le cache.
# (NB: --no-scripts --no-autoloader).
# cf. https://www.sentinelstand.com/article/composer-install-in-dockerfile-without-breaking-cache
COPY composer.json composer.lock auth.json ./
RUN composer install --no-interaction --no-suggest --no-scripts --no-autoloader && rm -f auth.json

# Copie des sources de l'appli dans l'image.
COPY . ./

# Reste du travail Composer qui ne peut se faire sans les sources de l'appli.
RUN composer dump-autoload --optimize

# Création du répertoire des proxies Doctrine.
RUN mkdir -p data/DoctrineORMModule/Proxy && chmod 777 data/DoctrineORMModule/Proxy

# Création de la config et activation du site Apache.
COPY docker/apache.conf /etc/apache2/sites-available/webapp.conf
RUN a2ensite webapp
